-- target("fmt")
--     set_kind("headeronly")
--     -- add_headerfiles(path.join(os.scriptdir(),"include/(fmt/*.h)"))
--     -- add_headerfiles(path.join(os.scriptdir(),"include/fmt/*.h"))
--     add_includedirs(path.join(os.scriptdir(),"./package/include/"),{public=true})
-- target_end()

-- target("fmt")
--     set_kind("object")
--     set_targetdir(path.join(os.projectdir(),"out/external"))
--     add_files(path.join(os.scriptdir(),"./package/src/*.cc"))
--     add_includedirs(path.join(os.scriptdir(),"./package/include/"),{public=true})
-- --     -- on_build(function(target)
-- --     --     package_dir=path.join(os.scriptdir(),"./package")
-- --     --     oldir=os.cd(package_dir)
-- --     --     os.tryrm("build")
-- --     --     os.vrunv("cmake",{"-B","build","-S",".","-G=Ninja","-DBUILD_SHARED_LIBS=TRUE"})
-- --     --     os.vrunv("cmake",{"--build","build"})
-- --     --     os.cd(oldir)
-- --     --     -- print(package:targetdir())
-- --     --     os.cp(path.join(package_dir,"build/bin/libfmt.*"),target:targetdir())
-- --     --     print("fmt library build successfully!")
-- --     -- end)
--     on_build_files(function(target,sourcebatch,opt)
--         package_dir=path.join(os.scriptdir(),"./package")
--         oldir=os.cd(package_dir)
--         os.tryrm("build")
--         os.vrunv("cmake",{"-B","build","-S",".","-G=Ninja","-DBUILD_SHARED_LIBS=TRUE"})
--         os.vrunv("cmake",{"--build","build"})
--         os.cd(oldir)
--         -- print(package:targetdir())
--         os.cp(path.join(package_dir,"build/bin/libfmt.dll"),target:targetdir())
--         print("fmt library build successfully!")
--     end)

-- target_end()


package("fmt")
    set_installdir(path.join(os.projectdir(),"./out/external/fmt"))
    on_install(function(package)
        package_dir=path.join(os.scriptdir(),"./package")
        oldir=os.cd(package_dir)
        os.tryrm("build")
        os.vrunv("cmake",{"-B","build","-S",".","-G=Ninja","-DBUILD_SHARED_LIBS=TRUE"})
        os.vrunv("cmake",{"--build","build"})
        os.vrunv("cmake",{"--install","build","--prefix",package:installdir()})
        os.cd(oldir)
        -- print(package:targetdir())
        print("fmt library build successfully!")
    end)
package_end()

